version: "3.3"

services:
  nginx:
    container_name: nginx
    image: nginx:stable
    depends_on:
      - beacon_node
      - validator_client
      - frontend
      - prometheus
      - grafana
      - geth
      - certbot
    restart: on-failure
    env_file: .env
    volumes:
      - certs:/etc/letsencrypt
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - ./nginx/error.log:/etc/nginx/error_log.log
      - ./nginx/cache/:/etc/nginx/cache
    ports:
      - 8080:80
      - 443:443
  certbot:
    container_name: certbot
    image: certbot/certbot
    env_file: .env
    volumes:
    - ./scripts:/root/scripts
    - certs:/etc/letsencrypt/
    entrypoint: sh /root/scripts/start-certbot.sh
  beacon_node:
    container_name: beacon_node
    image: seananderson33/lighthouse:health
    volumes:
      - ./lighthouse-data:/root/.lighthouse
      - ./scripts:/root/scripts
    ports:
      - 9000:9000/tcp
      - 9000:9000/udp
    env_file: .env
    command: sh /root/scripts/start-beacon-node.sh
    restart: on-failure
  validator_client:
    container_name: validator_client
    image: seananderson33/lighthouse:health
    volumes:
      - ./lighthouse-data:/root/.lighthouse
      - ./scripts:/root/scripts
      - ./validator_keys:/root/validator_keys
    depends_on:
      - beacon_node
    env_file: .env
    command: sh /root/scripts/start-validator-client.sh
    restart: on-failure
  geth:
    container_name: geth
    image: ethereum/client-go
    entrypoint: /bin/sh
    volumes:
      - ./geth-data:/root/.ethereum
      - ./scripts:/root/scripts
    ports:
      - 30303:30303/tcp
      - 30303:30303/udp
    env_file: .env
    command: /root/scripts/start-geth.sh
    restart: on-failure
  prometheus:
    container_name: prometheus
    build:
      context: prometheus
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - type: bind
        source: ./scrape-targets
        target: /prometheus/targets
  grafana:
    container_name: grafana
    build:
      context: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
  frontend:
    image: seananderson33/lighthouse-client-ui
    container_name: frontend
    stdin_open: true
    env_file:
      - .env

volumes:
  grafana-data:
  prometheus-data:
  targets:
  certbot-etc:
  certbot-var:
  certs:
    driver: local
    driver_opts:
      type: none
      device: ./certs
      o: bind